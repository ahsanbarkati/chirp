type Tweet {
    id: ID!
    text: String! @search(by: [fulltext])
    mentions: [User!]
    tags: [Tag!] @hasInverse(field: tweets)
    commentOn: [Tweet!]
    comments: [Tweet!] @hasInverse(field: commentOn)
    retweetOf: [Tweet!]
    retweets: [Tweet!] @hasInverse(field: retweetOf)
    likedBy: [User!]
    createdAt: DateTime! @search(by: [hour])
    createdBy: User! @hasInverse(field: tweeted)
}
type Tag {
    name: String! @id @search(by: [regexp])
    tweets: [Tweet!]
    parent: Tag @hasInverse(field: child)
    child: [Tag!]
}
type Notification {
    id: ID!
    from: User
    action: String # LIKE, RETWEET, COMMENT, MENTION
    about: Tweet
#   Need this because we want to show latest notifications at top, so need to order by this
    createdAt: DateTime!
}
type User {
    id: ID!
    name: String! @search(by: [regexp, fulltext])
    username: String @search(by: [exact, regexp])
    email: String! @id
    profilePic: String
    info: String
    location: String
    notifications: [Notification!]
    tweeted: [Tweet]
    pinned: Tweet
    followedUsers: [User]
    followers: [User] @hasInverse(field: followedUsers)
    followedTags: [String]
    createdAt: DateTime!
}